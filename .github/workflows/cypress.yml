name: Cypress Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        containers: [1, 2]  # Uses 2 parallel instances for Cypress
      fail-fast: false

    steps:
      # Checkout the code
      - name: Checkout
        uses: actions/checkout@v4

      # Set up Node.js for frontend
      - name: Set up Node.js for Frontend
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      # Set up Python for backend
      - name: Set up Python for Backend
        uses: actions/setup-python@v3
        with:
          python-version: '3.11'

      - name: Install Dependencies
        run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt

      # Install frontend dependencies
      - name: Install Frontend Dependencies
        working-directory: ./frontend
        run: |
          npm install

      # Start the backend server
      - name: Start Backend Server
        working-directory: ./backend
        run: |
          nohup python manage.py runserver &  # Ensure the server runs in the background
        env:
          DEBUG: ${{ secrets.DEBUG }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
          SITE_URL: ${{ secrets.SITE_URL }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}
          RECAPTCHA_KEY: ${{ secrets.RECAPTCHA_KEY }}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY }}
          SOCIAL_AUTH_GOOGLE_OAUTH2_KEY: ${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_KEY }}
          SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET: ${{ secrets.SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
          AWS_S3_REGION_NAME: ${{ secrets.AWS_S3_REGION_NAME }}
          EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
          EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
          EMAIL_USE_TLS: ${{ secrets.EMAIL_USE_TLS }}
          EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
          EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
          DEFAULT_FROM_EMAIL: ${{ secrets.DEFAULT_FROM_EMAIL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
          DATABASE_USER: ${{ secrets.DATABASE_USER }}
          DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
          DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
          DB_PORT: ${{ secrets.DB_PORT }}

      # Start frontend server
      - name: Start Frontend Server
        working-directory: ./frontend
        run: |
          npm start &
        env:
          REACT_APP_API_URL: ${{ secrets.REACT_APP_API_URL }}  # Example of frontend environment variables
          VITE_GOOGLE_MAPS_API_KEY: ${{ secrets.VITE_GOOGLE_MAPS_API_KEY }}

      # Wait for both servers to be ready
      - name: Wait for Servers
        run: |
          npx wait-on {{ secret.SITE_URL }}  # Frontend server URL
          npx wait-on {{ secret.VITE_API_URL }}  # Backend server URL (adjust if different)

      # Run Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          start: npm start
          wait-on: 'http://localhost:3000'
          record: true
          parallel: true
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
